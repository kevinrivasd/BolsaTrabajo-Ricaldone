/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

import Controlador.Utils;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import Controlador.Utils;
import Vista.Menú;
import Customizar.JTextField;

/**
 * User configuration panel
 *
 * @author Jonathan
 */
public class ConfiguracionPanel extends javax.swing.JPanel {

    /**
     * List to obtain users
     */
    public static List<String> userName;
    /**
     * Object from Utils
     */
    Utils utils = new Utils();
    JTextField jtxt = new JTextField();
//    Menú menu = new Menú();

    /**
     * Obtain user and e-mail of the user that enters the system.
     *
     * @param userParam
     */
    public ConfiguracionPanel(List<String> userParam) {
        initComponents();
        userName = userParam;
        txtCorreo.setText(userName.get(1));
        txtUser.setText(userName.get(0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        txtCorreo = new javax.swing.JTextField();
        txtUser = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();

        setBackground(new java.awt.Color(239, 245, 213));
        setPreferredSize(new java.awt.Dimension(1141, 717));

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(50, 63, 27));
        jLabel1.setText("Configuracion");

        jLabel3.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(133, 175, 75));
        jLabel3.setText("cambiar contraseña");

        jLabel4.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(50, 63, 27));
        jLabel4.setText("Nombre de usuario ");

        jLabel6.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(50, 63, 27));
        jLabel6.setText("Correo");

        jPasswordField1.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyTyped(evt);
            }
        });

        txtCorreo.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtCorreo.setText("JuanRomero@gmail.com");
        txtCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoKeyTyped(evt);
            }
        });

        txtUser.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtUser.setText("JuanRomero");
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(50, 63, 27));
        jLabel7.setText("Contraseña");

        btnActualizar.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3))
                    .addComponent(jLabel1))
                .addContainerGap(623, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(2, 2, 2)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addGap(2, 2, 2)
                .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel7)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3)))
                .addGap(67, 67, 67)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(238, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
/**
     * Update user information
     *
     * @param evt
     */
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        LinkedHashMap<String, String> data = CollectData();
        int res;
        if (!Controlador.Utils.emptyFields(data)) {
            try {
                res = utils.actualizar(data, userName.get(3), "UserSystems", "idUser");
                JOptionPane.showMessageDialog(null, "Te has actualizado con exito");
//                userName = menu.cargarProps(userName.get(3));

            } catch (Exception ex) {
                Logger.getLogger(ConfiguracionPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No dejes campos sin llenar por favor.");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyTyped
        if (txtUser.getText().length() >= 30) {
            evt.consume();
        }
        jtxt.ValidacionCaracteres(evt);
    }//GEN-LAST:event_txtUserKeyTyped

    private void txtCorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyTyped
        if (txtCorreo.getText().length() >= 45) {
            evt.consume();
        }
        jtxt.ValidacionCaracteres_tilde_arroba(evt);
    }//GEN-LAST:event_txtCorreoKeyTyped

    private void jPasswordField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyTyped
        // TODO add your handling code here:
        if (jPasswordField1.getText().length() >= 250) {
            evt.consume();
        }
        jtxt.ValidacionCaracteres(evt);
    }//GEN-LAST:event_jPasswordField1KeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
/**
     * Linked map for capturing base fields
     *
     * @return
     */
    private LinkedHashMap<String, String> CollectData() {
        LinkedHashMap<String, String> data = new LinkedHashMap<>();
//        char[] pword = txtU.getPassword();

        data.put("nameUser", txtUser.getText());
        data.put("mailUser", txtCorreo.getText());

        return data;
    }
}
